name : Test model

on: 
  pull_request:
    branches:
      - main
    paths:
      - 's3_model.json'
jobs:
  test: # job name
    name: Run pytest
    runs-on: ubuntu-latest
    env:
      TEST_SECRET: ${{ secrets.TEST_SECRET }}
      S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
      DOWNLOAD_PATH: ${{ secrets.DOWNLOAD_PATH }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
    strategy:
      matrix:
        python-version: ["3.11.8"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version}}
    
    - name: Install dependencies
      run : |
        python -m pip install --upgrade pip
        pip install -r requirementsv3.txt
    - name: Download model , tokenizer , datasets and scoring 
      run: |
        python load_resources.py
    - name: Run pytest
      run: |
        python -m pytest

    - name: Upload pytest test result
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: test-results-${{ matrix.python-version }}.xml
      if: ${{ always() }}

    - name: Evaluate model  on new dataset 
      run: | 
        python main.py --only_evaluate


    - name: Login to Docker Hub
      uses: docker/login-action@v3  
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_APPNAME }}:ai_resource .

    - name: Push Docker Image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_APPNAME }}:ai_resource


